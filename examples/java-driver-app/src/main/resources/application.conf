# Azure Cosmos Extensions for DataStax Java Driver 4 for Apache Cassandra application configuration
#
# See reference.conf for the full set of configuration options for CosmosLoadBalancingPolicy and CosmosRetryPolicy.
# Update this file or override the values provided here and in reference.conf to match your environment and
# preferences. See https://docs.datastax.com/en/developer/java-driver/4.9/manual/core/configuration/ for a general
# discussion of DataStax Java Driver 4.X configuration.

datastax-java-driver {
  advanced {
    auth-provider {
      # By default we use the PlainTextAuthProvider (see reference.conf) and specify the username and password here.
      username = ${?AZURE_COSMOS_CASSANDRA_USERNAME}
      password = ${?AZURE_COSMOS_CASSANDRA_PASSWORD}
    }
    metrics {
      # Metrics are enabled in order to verify that requests are routed correctly.
      node {
        enabled = [ cql-messages ]
      }
      session {
        enabled = [ cql-requests ]
      }
    }
    retry-policy {
      # By default we use the CosmosRetryPolicy (see reference.conf) and accept the default configuration here.
    }
  }
  basic {

    contact-points = [${?AZURE_COSMOS_CASSANDRA_CONTACT_POINT}]

    load-balancing-policy {

      # Cosmos load balancing policy parameters
      #
      #   When global-endpoint is specified, you may specify a read-datacenter, but must not specify a write-datacenter.
      #   Writes will go to the default write region when global-endpoint is specified. When global-endpoint is not
      #   specified, you must specify values for read-datacenter and write-datacenter.
      #
      #   Update this file or run this example with these system properties set to override the values provided here:
      #
      #   -Ddatastax-java-driver.basic.load-balancing-policy.global-endpoint=[<global-endpoint>|""]
      #   -DDdatastax-java-driver.basic.load-balancing-policy.read-datacenter=[<read-datacenter>|""]
      #   -DDdatastax-java-driver.basic.load-balancing-policy.write-datacenter=[<write-datacenter>|""]
      #
      #   Alternatively, set the environment variables referenced here to match the topology and preferences for your
      #   Cosmos DB Cassandra API instance.

      global-endpoint = ${?AZURE_COSMOS_CASSANDRA_GLOBAL_ENDPOINT}
      read-datacenter = ${?AZURE_COSMOS_CASSANDRA_READ_DATACENTER}
      write-datacenter = ${?AZURE_COSMOS_CASSANDRA_WRITE_DATACENTER}
    }
  }
}
