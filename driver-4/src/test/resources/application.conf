# Azure Cosmos Extensions for DataStax Java Driver 4 for Apache Cassandra application configuration
#
# See reference.conf for the full set of configuration options for CosmosLoadBalancingPolicy and CosmosRetryPolicy.
# Update this file or override the values provided here and in reference.conf to match your environment and
# preferences. See https://docs.datastax.com/en/developer/java-driver/4.9/manual/core/configuration/ for a general
# discussion of DataStax Java Driver 4.X configuration.

datastax-java-driver {
  advanced {
    auth-provider {
      # By default we use the PlainTextAuthProvider (see reference.conf) and specify the username and password here.
      username = ${?AZURE_COSMOS_CASSANDRA_USERNAME}
      password = ${?AZURE_COSMOS_CASSANDRA_PASSWORD}
    }
    metrics {
      session.enabled = [ connected-nodes, cql-client-timeouts, cql-requests ],
      node.enabled = [
        // Message and connection metrics
        cql-messages,
        pool.open-connections,
        errors.connection.init,
        // Request errors
        errors.request.unsent,
        errors.request.aborted,
        errors.request.unavailables,
        errors.request.read-timeouts,
        errors.request.write-timeouts,
        errors.request.others,
        // Request errors that triggered RetryPolicy
        retries.total
        retries.aborted,
        retries.read-timeout,
        retries.write-timeout,
        retries.unavailable,
        retries.other,
        // Request errors that were ignored by RetryPolicy
        ignores.total,
        ignores.aborted,
        ignores.read-timeout,
        ignores.write-timeout,
        ignores.unavailable,
        ignores.other
      ]
    }
    ssl-engine-factory {
      hostname-validation = false
      truststore-path = ${?AZURE_COSMOS_CASSANDRA_TRUSTSTORE_PATH}
      truststore-password = ${?AZURE_COSMOS_CASSANDRA_TRUSTSTORE_PASSWORD}
    }
    // TODO (DANOBLE) Use a throttler programmmaticaly in CosmosRetryPolicyTest#canRetryAsExpectedWhenThrottled
    throttler {
      class = RateLimitingRequestThrottler
      max-requests-per-second = 8
      max-queue-size = 100000
      drain-interval = 100 ms
    }
  }
  basic {
    contact-points = [${?AZURE_COSMOS_CASSANDRA_GLOBAL_ENDPOINT}]
    load-balancing-policy {
      multi-region-writes = ${?AZURE_COSMOS_CASSANDRA_MULTI_REGION_WRITES}
      preferred-regions += ${?AZURE_COSMOS_CASSANDRA_PREFERRED_REGION_1}
      preferred-regions += ${?AZURE_COSMOS_CASSANDRA_PREFERRED_REGION_2}
      preferred-regions += ${?AZURE_COSMOS_CASSANDRA_PREFERRED_REGION_3}
      preferred-regions += ${?AZURE_COSMOS_CASSANDRA_PREFERRED_REGION_4}
      preferred-regions += ${?AZURE_COSMOS_CASSANDRA_PREFERRED_REGION_5}
    }
    request.timeout = 30 seconds  // Allow ample time for creating keyspaces and tables in a geo-distributed database
  }
}
